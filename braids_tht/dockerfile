### https://github.com/pichenettes/mutable-dev-environment/blob/master/0_install-toolchain.sh

FROM ubuntu:18.04 

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get -y install locales
RUN apt-get -y install libterm-readline-gnu-perl
RUN apt-get -y install dialog apt-utils
run debconf-set-selections

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

RUN env

RUN dpkg-reconfigure locales

ENV LANGUAGE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

RUN locale-gen en_US.UTF-8
RUN dpkg-reconfigure locales

RUN dpkg --add-architecture i386
RUN apt-get update -qq
RUN apt-get install -y build-essential autotools-dev autoconf pkg-config libusb-1.0-0 libusb-1.0-0-dev libftdi1 libftdi-dev git libc6:i386 libncurses5:i386 libstdc++6:i386 cowsay figlet language-pack-en
#RUN locale-gen UTF-8

RUN apt-get install -y python2.7 python-numpy python-scipy python-matplotlib
RUN apt-get install -y gcc-avr binutils-avr avr-libc avrdude
RUN ln -s /usr /usr/local/CrossPack-AVR

RUN apt-get -y install curl
RUN curl -L https://launchpad.net/gcc-arm-embedded/4.8/4.8-2013-q4-major/+download/gcc-arm-none-eabi-4_8-2013q4-20131204-linux.tar.bz2 | tar xjf -
RUN mv gcc-arm-none-eabi-4_8-2013q4 /usr/local/arm-4.8.3/
RUN ln -s /usr/local/arm-4.8.3 /usr/local/arm

#RUN git clone --depth 1 https://github.com/pichenettes/eurorack.git /home/eurorack
RUN git clone --depth 1 https://github.com/boourns/eurorack.git /home/eurorack

WORKDIR /home/eurorack
RUN git submodule init && git submodule update 
RUN cd stm_audio_bootloader && git pull origin master && cd ..

#Braids THT 
COPY dac.h ./braids/drivers/dac.h
COPY encoder.h ./braids/drivers/encoder.h
COPY encoder.cc ./braids/drivers/encoder.cc

ENV PYTHONPATH='.:$PYTHONPATH'
